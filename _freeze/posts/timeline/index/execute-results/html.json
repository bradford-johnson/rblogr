{
  "hash": "ef41db6b852c784caef5023fb1d70291",
  "result": {
    "markdown": "---\ntitle: \"Curriculum Vitae Timeline with `ggplot2`\"\nauthor: \"Bradford Johnson\"\ndate: \"2022-10-4\"\nformat:\n  html:\n    code-fold: true\ncategories: [ggplot2]\nimage: \"djim-loic-ft0-Xu4nTvA-unsplash.jpg\"\n---\n\n\n## Creating a CV Timeline\n\nYou can use this code to create your own timeline!\n\n> This is what mine looks like...\n>\n> Big thanks to **Antoine Soetewey** for sharing this code in [this](https://statsandr.com/blog/how-to-create-a-timeline-of-your-cv-in-r/) post.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# All packages used below must be installed first\n#library(devtools)\n#devtools::install_github(\"laresbernardo/lares\")\n#library(lares)\nlibrary(ggplot2)\n\n\ntoday <- as.character(Sys.Date())\n\n\n### Edit from here ###\ncv <- data.frame(rbind(\n  c(\"BA Sociology\", \"Winthrop University\", \"Academic\", \"2017-09-01\", \"2021-12-18\"),\n  c(\"Data Analytics Program\", \"Thinkful\", \"Academic\", \"2022-06-01\", today),\n  c(\"IT Team Lead\", \"TopGolf\", \"Work Experience\", \"2022-10-03\", today),\n  c(\"Maintenance Technician\", \"TopGolf\", \"Work Experience\", \"2022-03-01\", \"2022-10-2\"),\n  c(\"Time Using R\", \"R\", \"Extra\", \"2021-01-01\", today)\n))\n### Edit until here ###\n\n\norder <- c(\"Role\", \"Place\", \"Type\", \"Start\", \"End\")\ncolnames(cv) <- order\n\n\nplot_timeline2 <- function(event, start, end = start + 1, label = NA, group = NA,\n                           title = \"Curriculum Vitae Timeline\", subtitle = \"Bradford Johnson\",\n                           size = 7, colour = \"orange\", save = FALSE, subdir = NA) {\n  df <- data.frame(\n    Role = as.character(event), Place = as.character(label),\n    Start = lubridate::date(start), End = lubridate::date(end),\n    Type = group\n  )\n  cvlong <- data.frame(pos = rep(\n    as.numeric(rownames(df)),\n    2\n  ), name = rep(as.character(df$Role), 2), type = rep(factor(df$Type,\n                                                             ordered = TRUE\n  ), 2), where = rep(\n    as.character(df$Place),\n    2\n  ), value = c(df$Start, df$End), label_pos = rep(df$Start +\n                                                    floor((df$End - df$Start) / 2), 2))\n  maxdate <- max(df$End)\n  p <- ggplot(cvlong, aes(\n    x = value, y = reorder(name, -pos),\n    label = where, group = pos\n  )) +\n    geom_vline(\n      xintercept = maxdate,\n      alpha = 0.8, linetype = \"dotted\"\n    ) +\n    labs(\n      title = title,\n      subtitle = subtitle, x = NULL, y = NULL, colour = NULL\n    ) +\n    theme_classic() +\n    theme(panel.background = element_rect(\n      fill = \"white\",\n      colour = NA\n    ), axis.ticks = element_blank(), panel.grid.major.x = element_line(\n      size = 0.25,\n      colour = \"grey80\"\n    ))\n  if (!is.na(cvlong$type)[1] | length(unique(cvlong$type)) >\n      1) {\n    p <- p + geom_line(aes(color = type), size = size) +\n      facet_grid(type ~ ., scales = \"free\", space = \"free\") +\n      guides(colour = \"none\") +\n      scale_colour_manual(values = c(\"#F8766D\", \"#00BA38\", \"#619CFF\")) +\n      theme(strip.text.y = element_text(size = 10))\n  } else {\n    p <- p + geom_line(size = size)\n  }\n  p <- p + geom_label(aes(x = label_pos),\n                      colour = \"black\",\n                      size = 2, alpha = 0.7\n  )\n  if (save) {\n    file_name <- \"cv_timeline.png\"\n    if (!is.na(subdir)) {\n      dir.create(file.path(getwd(), subdir), recursive = T)\n      file_name <- paste(subdir, file_name, sep = \"/\")\n    }\n    p <- p + ggsave(file_name, width = 8, height = 6)\n    message(paste(\"Saved plot as\", file_name))\n  }\n  return(p)\n}\n\n\n\n\nplot_timeline2(\n  event = cv$Role,\n  start = cv$Start,\n  end = cv$End,\n  label = cv$Place,\n  group = cv$Type,\n  save = FALSE,\n  subtitle = \"Bradford Johnson\" # replace with your name\n)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-1-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}